{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/app-header/index.js","components/app-header/app-header.js","components/pages/itemPage.js","components/app/index.js","components/app/app.js","services/resto-service.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","menuItem","onAddtoCart","title","price","category","url","react_default","a","createElement","className","react_router_dom","to","concat","id","src","alt","onClick","menuLoaded","newMenu","type","payload","menuRequested","menuErrored","addedToCard","Spinner","Error","RestoServiceContext","React","createContext","WithRestoService","Component","props","components_resto_service_context","Consumer","RestoService","Object","assign","MenuList","_this","this","getMenuItems","then","res","catch","e","_this$props","menuItems","loading","error","components_spinner","components_error","items","map","components_menu_list_item","key","menu_list_View","View","mapDispatchtoProps","connect","state","menu","MainPage","components_menu_list","generateOrder","item","qtty","mapDispatchToProps","deletedFromCart","CartTable","_ref2","length","Fragment","count","setOrder","CartPage","components_cart_table","AppHeader","totalPrice","cartIcon","ItemPage","_this2","find","el","match","params","App","style","background","Background","minHeight","components_app_header","total","react_router","exact","path","main_page","cart_page","component","_apiBase","fetch","ok","status","json","getResources","getResource","console","log","order","getOrderNumber","number","newOrder","method","headers","Content-Type","body","JSON","stringify","orderNumber","ErrorBoundry","setState","children","initialState","reducer","arguments","undefined","action","objectSpread","itemInd","findIndex","itemInState","newItem","toConsumableArray","slice","index","itemIndex","store","createStore","restoService","ReactDOM","render","es","error_boundry","Provider","value","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.a7c4c867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({menuItem, onAddtoCart}) => {\n    const {title, price, category, url } = menuItem;\n    return (\n            <li className=\"menu__item\">\n               <Link to={`/${menuItem.id}`} className=\"menu__link\">\n                <div className=\"menu__title\">{title}</div>\n                <img className=\"menu__img\" src={url} alt={title}></img>\n                <div className=\"menu__category\">Category: <span>{category}</span></div>\n                <div className=\"menu__price\">Price: <span>{price}$</span></div>\n               </Link>\n                <button onClick={() => onAddtoCart()} className=\"menu__btn\">Add to cart</button>\n            </li>\n            )\n}\n\nexport default MenuListItem;","// Создаем  actionCreator\nconst menuLoaded = (newMenu) => {\n    return {\n        type: 'MENU_LOADED',\n        payload: newMenu\n    }\n};\n\nconst menuRequested = () => {\n    return {\n        type: 'MENU_REQUESTED',\n    }\n};\n\nconst menuErrored = () => {\n    return {\n        type: 'MENU_ERRORED',\n    }\n};\n\nconst addedToCard = (id) => {\n    return {\n        type: 'ITEM_ADDED_TO_CART',\n        payload: id\n    }\n};\n\nconst deletedFromCart = (id) => {\n    return {\n        type: 'ITEM_REMOVED_FROM_CART',\n        payload: id\n    }\n};\n\nexport {\n    menuLoaded,\n    menuRequested,\n    menuErrored,\n    addedToCard,\n    deletedFromCart\n}","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.css';\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-ripple-qw2sxw6wiys\"><div className=\"ldio-h3wxszf6y4i\">\n            <div></div><div></div>\n        </div></div>\n\n    )\n}\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\nimport './error.scss'\nconst Error = () => {\n    return (\n        <div className=\"error\">\n            <div className=\"error__title\">Error!</div>\n            <div className=\"error__descr\">Something goes wrong...</div>\n        </div>\n    )\n}\n\nexport default Error;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\n\n// Создаем контекст\nconst RestoServiceContext = React.createContext();\n\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\n// Создаем компонент высшего порядка\nconst WithRestoService = () => (Component) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Component \n                            {...props} \n                            RestoService={RestoService}/>\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        )\n    }\n};\n\nexport default WithRestoService;","import React, {Component} from 'react';\nimport MenuListItem from '../menu-list-item';\nimport './menu-list.scss';\nimport {connect} from 'react-redux';\nimport {menuLoaded, menuRequested, menuErrored, addedToCard} from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport WithRestoService from '../hoc';\n\nclass MenuList extends Component {\n\n    componentDidMount() {\n        const {RestoService} = this.props;\n        this.props.menuRequested();\n        RestoService.getMenuItems()\n            .then((res) => this.props.menuLoaded(res))\n            .catch((e) => this.props.menuErrored())\n\n    }\n    render() {\n        const {menuItems, loading, error, addedToCard} = this.props;\n\n        if(loading) {\n            return <Spinner/>\n        }\n        if(error) {\n            return <Error/>\n        }\n\n        const items = menuItems.map(menuItem => {\n            return <MenuListItem \n                    key={menuItem.id} \n                    menuItem={menuItem}\n                    onAddtoCart={() => addedToCard(menuItem.id)}\n                    />\n        })\n        return (\n            <View items={items}/>\n        )\n    }\n};\n\nconst View = ({items}) => {\n    return (\n        <ul className=\"menu__list\">\n            {items}\n        </ul>\n    )\n}\n\nconst mapStatetoProps = (state) => {\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n};\n\nconst mapDispatchtoProps = {\n    menuLoaded, \n    menuRequested, \n    menuErrored, \n    addedToCard\n    // return {\n    //     menuLoaded: (newMenu) => {\n    //         dispatch({\n    //             type: 'MENU_LOADED',\n    //             payload: newMenu\n    //         })\n    //     }\n    // }\n};\n\nexport default WithRestoService()(connect(mapStatetoProps, mapDispatchtoProps)(MenuList));","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList/>\n    )\n}\n\nexport default MainPage;\n","import React from 'react';\nimport './cart-table.scss';\nimport {connect} from 'react-redux';\nimport {deletedFromCart} from '../../actions';\nimport WithRestoService from '../hoc';\nconst CartTable = ({items, deletedFromCart, RestoService}) => {\n    if(items.length === 0) {\n        return (<div className=\"cart__empty\">Ваша корзина пуста!</div>)\n    }\n    return (\n        <>\n            <div className=\"cart__title\">Ваш заказ:</div>\n            <div className=\"cart__list\">\n                {\n                    items.map(item => {\n                       \n                        const {title, url, id, price, count} = item;\n                        return (\n                            <div key={id} className=\"cart__item\">\n                                <img src={url} className=\"cart__item-img\" alt={title}></img>\n                                <div className=\"cart__item-title\">{title}</div>\n                                <div className=\"cart__item-price\">{price}$</div>\n                                <div className=\"cart__item-counter\">{count}</div>\n                                <div onClick={() => deletedFromCart(id)} className=\"cart__close\">&times;</div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <button onClick={() => RestoService.setOrder(generateOrder(items))}  className=\"cart__btn\">Оформить заказ!</button>\n        </>\n    );\n};\n\nconst generateOrder = (items) => {\n    const newOrder = items.map(item => {\n        return {\n            id: item.id,\n            qtty: item.qtty\n        }\n    })\n    return newOrder;\n}\nconst mapStateToProps = ({items}) => {\n    return {\n        items\n    }\n}\n\nconst mapDispatchToProps = {\n    deletedFromCart\n}\n\n\nexport default WithRestoService()(connect(mapStateToProps, mapDispatchToProps)(CartTable));","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable/>\n        </div>\n    )\n}\n\nexport default CartPage;","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport {Link} from 'react-router-dom';\nimport './app-header.scss';\nimport {connect} from 'react-redux';\nconst AppHeader = ({totalPrice}) => {\n    return (\n        <header className=\"header\">\n            <Link className=\"header__link\" to=\"/\">\n                Menu\n            </Link>\n            <Link className=\"header__link\" to=\"/cart\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {totalPrice} $\n            </Link>\n        </header>\n    )\n};\n\nconst mapStateToProps = ({totalPrice}) => {\n    return {\n        totalPrice\n    }\n}\nexport default connect(mapStateToProps)(AppHeader);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport WithRestoService from '../hoc/';\nimport Spinner from '../spinner';\nimport {menuLoaded, menuRequested, menuErrored, addedToCard} from '../../actions';\n\nimport './itemPage.scss';\n\nclass ItemPage extends Component {\n\n    componentDidMount() {\n        if( this.props.menuItems.length === 0){\n            this.props.menuRequested();\n\n            const {RestoService} = this.props;\n            RestoService.getMenuItems()\n                .then(res => this.props.menuLoaded(res))\n                .catch(error => this.props.menuErrored());\n        }\n    }\n\n    render() {\n        if(this.props.loading) {\n            return (\n                <div className = \"item_page\">\n                    <Spinner/>\n                </div>\n            )\n        }\n        const item = this.props.menuItems.find(el => +el.id === +this.props.match.params.id)\n        const{title, url, category, price, id} = item;\n\n        return (\n            <div className = \"item_page\">\n                <div className=\"menu__item item_block\">\n                     <div className=\"menu__title\">{title}</div>\n                    <img className=\"menu__img\" src={url} alt={title}></img>\n                    <div className=\"menu__category\">Category: <span>{category}</span></div>\n                    <div className=\"menu__price\">Price: <span>{price}$</span></div>\n                    <button onClick={() => this.props.addedToCard(id)} className=\"menu__btn\">Add to cart</button>\n                    <span className = {`menu__category_Img ${category}`}></span> \n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps =  (state) =>{\n    return {\n        menuItems: state.menu,\n        loading: state.loading,\n        error: state.error\n    }\n}\n\nconst mapDispatchToProps = {\n    menuLoaded: menuLoaded,\n    menuRequested,\n    menuErrored,\n    addedToCard\n}\n\nexport default WithRestoService ()( connect(mapStateToProps, mapDispatchToProps)(ItemPage) );\n","import App from './app';\n\nexport default App;","import React from 'react';\nimport {MainPage, CartPage} from '../pages';\nimport AppHeader from '../app-header';\nimport Background from './food-bg.jpg';\nimport ItemPage from '../pages/itemPage';\nimport {Switch, Route} from 'react-router-dom';\n\nconst App = () => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`, minHeight:'100vh'}} className=\"app\">\n            <AppHeader total={50}/>\n            <Switch>\n                <Route exact path=\"/\">\n                    <MainPage/>\n                </Route>\n                <Route path=\"/cart\">\n                    <CartPage/>\n                </Route>\n                <Route path = '/:id' component={ItemPage}/>\n            </Switch>\n        </div>\n    )\n}\n\nexport default App;","\n// Создаем сервис,  который будет возвращать нам меню items\nexport default class RestoService {\n    _apiBase = 'http://localhost:3000'\n    async getResources(url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if(!res.ok) {\n            throw new Error(`Could not fetch ${res.url}, ${res.status}`)\n        }\n        return await res.json();\n    }\n\n    async getMenuItems() {\n        return await this.getResources('/menu/')\n    }\n    async getItem(id) {\n        const res = await this.getResource('/menu/');\n        console.log(res);\n        const item = res.find( (el) => {\n            console.log(`el.id: ${el.id}, id: ${id}`);\n            return el.id === +id;\n        }) \n        console.log(item);\n        return item;\n    }\n\n    async setOrder(order) {\n        const number = await this.getOrderNumber();\n        const newOrder = {\n            id: number,\n            order: order\n        }\n        const response = await fetch(`${this._apiBase}/orders`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(newOrder)\n        });\n        if (!response.ok){\n            throw new Error('json error'); \n        }\n    }\n\n    async getOrderNumber(){\n        const res = await this.getResources('/orders/');\n        const orderNumber = res.length + 1;\n\n        return orderNumber;\n    }\n}","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, {Component} from 'react';\nimport Error from '../error';\n\n// Создаем ErrorBoundry - это обертка для ловли ошибок c методом жизненного цикла componentDidCatch\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch() {\n        this.setState({error: true});\n    }\n    render() {\n        if (this.state.error) {\n            return <Error/>\n        }\n        return this.props.children;\n    }\n}","// Создаем значени по умолчанию для state\nconst initialState = {\n    menu: [],\n    loading: true,\n    error: false,\n    items: [],\n    totalPrice: 0\n}\n// Создаем фукнцию reducer\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'MENU_LOADED': \n            return {\n                ...state,\n                menu: action.payload,\n                loading: false,\n            }\n        case 'MENU_REQUESTED': \n            return {\n                ...state,\n                loading: true,\n            }\n        case 'MENU_ERRORED': \n            return {\n                ...state,\n                error: true\n            }\n        case 'ITEM_ADDED_TO_CART': \n            const id = action.payload;\n            // находим элемент в items, и проверяем его количесво по числу найденных индексов\n            const itemInd = state.items.findIndex(item => item.id === id);\n            if (itemInd >= 0) {\n                // если больше 0, то находим этот элемент \n                const itemInState = state.items.find(item => item.id === id);\n                // на его основе создаем новый элемент, с увеличением count \n                const newItem = {\n                    ...itemInState,\n                    count: ++itemInState.count\n                }\n                // и возвращаем \n                return {\n                    ...state,\n                    items: [\n                        ...state.items.slice(0, itemInd),\n                        newItem,\n                        ...state.items.slice(itemInd + 1)\n                    ],\n                    totalPrice: state.totalPrice + newItem.price\n                }\n            }\n            const item = state.menu.find(item => item.id === id);\n            const newItem = {\n                title: item.title,\n                price: item.price,\n                url: item.url,\n                id: item.id,\n                count: 1\n            }\n            return {\n                ...state, \n                items: [\n                    ...state.items,\n                    newItem\n                ],\n                totalPrice: state.totalPrice + newItem.price\n            }\n        case 'ITEM_REMOVED_FROM_CART': \n            const index = action.payload;\n            const itemIndex = state.items.findIndex(item => item.id === index);\n            const price = state.items[itemIndex]['price'] * state.items[itemIndex]['count'];\n            return {\n                ...state, \n                items: [\n                    ...state.items.slice(0, itemIndex),\n                    ...state.items.slice(itemIndex + 1)\n                ],\n                totalPrice: state.totalPrice - price\n            }\n        default: \n            return state;\n    }\n};\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducers';\n\n// Создаем store \nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport './index.scss';\n\nconst restoService = new RestoService();\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App/>\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>\n\n\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}